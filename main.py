import ccxt
import requests
import pandas as pd
import os
import time

# ‚úÖ C·∫•u h√¨nh OKX
exchange = ccxt.okx({
    "apiKey": os.getenv("OKX_API_KEY"),
    "secret": os.getenv("OKX_API_SECRET"),
    "password": os.getenv("OKX_API_PASS"),
    "enableRateLimit": True,
    "options": {"defaultType": "spot"},
})

# ‚úÖ ƒê·ªçc Google Sheet
sheet_url = os.getenv("SPREADSHEET_URL")  # ph·∫£i l√† link public
sheet_csv_url = sheet_url.replace("/edit#gid=", "/export?format=csv&gid=")
df = pd.read_csv(sheet_csv_url)

# ‚úÖ ƒê·ªãnh nghƒ©a h√†m l·∫•y t√≠n hi·ªáu TradingView
def check_tradingview_signal(symbol: str) -> str:
    try:
        url = "https://scanner.tradingview.com/crypto/scan"
        payload = {
            "symbols": {"tickers": [f"BINANCE:{symbol}"], "query": {"types": []}},
            "columns": ["recommendation"]
        }
        resp = requests.post(url, json=payload)
        data = resp.json()
        signal = data["data"][0]["d"][0]
        return signal.upper()
    except Exception as e:
        print(f"‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c t√≠n hi·ªáu TV {symbol}: {e}")
        return ""

# ‚úÖ Duy·ªát t·ª´ng d√≤ng
for i, row in df.iterrows():
    try:
        coin = str(row.get("Coin")).strip()
        gia_mua = float(row.get("Gi√°", 0))
        buy_status = str(row.get("ƒê√£ Mua", "")).strip().upper()
        sell_status = str(row.get("Gi√° B√°n", "")).strip()
        symbol = f"{coin.upper()}/USDT"

        # B·ªè qua n·∫øu ƒë√£ mua r·ªìi
        if not coin or buy_status == "R·ªíI" or not gia_mua:
            continue

        # ‚úÖ Check c√≥ trong OKX SPOT kh√¥ng
        if symbol not in exchange.markets:
            print(f"‚ùå Kh√¥ng t√¨m th·∫•y {symbol} trong OKX SPOT")
            continue

        # ‚úÖ L·∫•y gi√° hi·ªán t·∫°i
        try:
            price = exchange.fetch_ticker(symbol)['last']
        except Exception as e:
            print(f"‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c gi√° {symbol}: {e}")
            continue

        # ‚úÖ N·∫øu gi√° > 5% so v·ªõi gi√° mua ‚Üí b·ªè qua
        if price > gia_mua * 1.05:
            print(f"‚ö†Ô∏è Gi√° {symbol} cao h∆°n 5% so v·ªõi gi√° mua g·ªëc ‚Üí KH√îNG MUA")
            continue

        # ‚úÖ Check t√≠n hi·ªáu t·ª´ TradingView
        tv_symbol = symbol.replace("/", "")
        signal_tv = check_tradingview_signal(tv_symbol)
        print(f"[TV] T√≠n hi·ªáu cho {tv_symbol} = {signal_tv}")

        if signal_tv not in ["BUY", "STRONG_BUY"]:
            print(f"‚ùå {symbol} b·ªã lo·∫°i do t√≠n hi·ªáu TV = {signal_tv}")
            continue

        # ‚úÖ MUA n·∫øu ch∆∞a mua
        usdt_amount = 10
        amount = round(usdt_amount / price, 6)
        try:
            order = exchange.create_market_buy_order(symbol, amount)
            print(f"‚úÖ ƒê√£ MUA {symbol} {amount:.6f} gi√° ~{price:.4f}")

            # ‚úÖ C·∫≠p nh·∫≠t l·∫°i sheet
            df.at[i, "ƒê√£ Mua"] = "R·ªíI"
            df.at[i, "Gi√° Mua"] = price
        except Exception as e:
            print(f"‚ùå L·ªói MUA {symbol}: {e}")
            continue

    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói t·∫°i d√≤ng {i}: {e}")
        continue
# --- X·ª≠ l√Ω B√ÅN n·∫øu ƒë√£ MUA ---
for i, row in df.iterrows():
    try:
        coin = str(row.get("Coin")).strip()
        buy_status = str(row.get("ƒê√£ Mua", "")).strip().upper()
        gia_mua = float(row.get("Gi√° Mua", 0))
        symbol = f"{coin.upper()}/USDT"

        # ‚úÖ B·ªè qua n·∫øu ch∆∞a mua ho·∫∑c kh√¥ng c√≥ gi√° mua
        if buy_status != "R·ªíI" or not gia_mua:
            continue

        # ‚úÖ Ki·ªÉm tra symbol t·ªìn t·∫°i
        if symbol not in exchange.markets:
            print(f"‚ùå Kh√¥ng t√¨m th·∫•y {symbol} trong OKX SPOT ƒë·ªÉ b√°n")
            continue

        # ‚úÖ L·∫•y gi√° hi·ªán t·∫°i
        try:
            current_price = exchange.fetch_ticker(symbol)['last']
        except Exception as e:
            print(f"‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c gi√° {symbol} ƒë·ªÉ b√°n: {e}")
            continue

        # ‚úÖ N·∫øu ch∆∞a ƒë·ªß 10% l·ª£i nhu·∫≠n ‚Üí b·ªè qua
        if current_price < gia_mua * 1.1:
            continue

        # ‚úÖ Ki·ªÉm tra s·ªë d∆∞
        balance = exchange.fetch_balance()
        coin_code = coin.upper()
        amount = balance.get(coin_code, {}).get("free", 0)
        if amount <= 0:
            continue

        # ‚úÖ ƒê·∫∑t l·ªánh b√°n
        try:
            order = exchange.create_market_sell_order(symbol, amount)
            print(f"üí∞ ƒê√£ B√ÅN {symbol} {amount:.6f} gi√° ~{current_price:.4f}")

            # ‚úÖ Ghi l·∫°i gi√° b√°n
            df.at[i, "Gi√° B√°n"] = current_price
        except Exception as e:
            print(f"‚ùå L·ªói b√°n {coin}: {e}")
            continue

    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói khi x·ª≠ l√Ω b√°n d√≤ng {i}: {e}")
        continue

# ‚úÖ Ghi l·∫°i v√†o Google Sheet (n·∫øu c·∫ßn ghi ng∆∞·ª£c)
# N·∫øu ch·ªâ ch·∫°y 1 chi·ªÅu (kh√¥ng update sheet) th√¨ b·ªè ƒëo·∫°n ghi

print("‚úÖ Bot SPOT OKX ho√†n t·∫•t.")
